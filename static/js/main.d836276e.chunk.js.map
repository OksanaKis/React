{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","console","log","weather","setWeather","icon","setIcon","fetchResult","a","fetch","then","res","json","result","src","message","useEffect","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","humidity","wind","speed","description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAGMA,EACC,mCADDA,EAEE,0CA4FOC,MAzFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACAC,QAAQC,IAAIH,GACZ,MAA8BD,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBN,qBAAxB,mBAAOO,EAAP,KAAaC,EAAb,KAEMC,EAAW,uCAAG,sBAAAC,EAAA,+EAEZC,MAAM,GAAD,OAAIb,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IAC3Dc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJT,EAAWS,GACXb,EAAS,IACTC,QAAQC,IAAIW,GACZP,EAAQ,qBAAKQ,IAAG,0CAAqCD,EAAOV,QAAQ,GAAGE,KAAvD,cARJ,sDAYdJ,QAAQC,IAAI,KAAMa,SAZJ,wDAAH,qDAuCjB,OAnBAC,qBAAU,WAERT,MACC,IAiBD,qBAAKU,UACoB,oBAAhBd,EAAQe,KACZf,EAAQe,KAAKC,KAAO,EAClB,WACChB,EAAQe,KAAKC,KAAO,GACnB,WACA,UACJ,MAPL,SASE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACAG,KAAK,OACLH,UAAU,aACVI,YAAY,SACZC,SAAU,SAAAC,GAAC,OAAIvB,EAASuB,EAAEC,OAAOC,QACjCA,MAAO1B,EACP2B,WAzCO,SAAAC,GACG,UAAZA,EAAIC,KAAiBrB,SA4CI,oBAAhBJ,EAAQe,KACf,gCACF,sBAAKD,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2Bd,EAAQ0B,KAAnC,KAA2C1B,EAAQ2B,IAAIC,WACvD,qBAAKd,UAAU,OAAf,SAvCc,SAACe,GACnB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA8BPE,CAAY,IAAIC,WAEvC,sBAAKzB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACC0B,KAAKC,MAAMzC,EAAQe,KAAKC,MADzB,WAGA,sBAAKF,UAAU,WAAf,sBAAoCd,EAAQe,KAAK2B,SAAjD,WAAmE1C,EAAQ2C,KAAKC,MAAhF,UACA,sBAAK9B,UAAU,UAAf,UAA0Bd,EAAQA,QAAQ,GAAGe,KAA7C,KAAqDf,EAAQA,QAAQ,GAAG6C,eACxE,qBAAK/B,UAAU,OAAf,SAAuBZ,UAGpB,SCrFb4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d836276e.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from \"react\";\n\nconst api = {\n  key: \"c60621f6b01ac75d9cb4f8afef300fdc\",\n  base: \"http://api.openweathermap.org/data/2.5/\",\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  console.log(query);\n  const [weather, setWeather] = useState({});\n  const [icon, setIcon] = useState();\n\n  const fetchResult = async () => {\n    try {\n    await fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n          setIcon(<img src={`http://openweathermap.org/img/w/${result.weather[0].icon}.png`} />);\n        });\n      } catch (error) {\n        // console.log(`Error: ${error.message}`);\n        console.log(error.message);\n      }\n  }\n  \n  const search = evt => {\n    if (evt.key === \"Enter\") fetchResult();\n  }\n  \n  useEffect(() => {\n    // search once after first render\n    fetchResult();\n  }, []) // no dependency: execute it once after first render\n  \n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  \n  return (\n    <div className={\n      typeof weather.main != \"undefined\"\n      ? (weather.main.temp < 3)\n         ? \"app cold\"\n         : (weather.main.temp < 18)\n           ? \"app warm\"\n           : \"app hot\"\n       : \"app\"\n     }>\n      <main>\n        <div className=\"search-box\">\n          <input \n          type=\"text\" \n          className=\"search-bar\"\n          placeholder=\"Search\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n          />\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n        <div className=\"location-box\">\n        <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n        <div className=\"date\">{dateBuilder(new Date())}</div>\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"temp\">\n          {Math.round(weather.main.temp)}Â°C\n          </div>\n          <div className=\"humidity\">Humidity {weather.main.humidity}%, Wind {weather.wind.speed}km/h</div>\n          <div className=\"weather\">{weather.weather[0].main}, {weather.weather[0].description}</div>\n          <div className=\"icon\">{icon}</div>\n        </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}